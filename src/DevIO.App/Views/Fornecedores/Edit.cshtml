@model DevIO.App.ViewModels.FornecedorViewModel

@{
    ViewData["Title"] = "Editar Fornecedor";
}

<h1>@ViewData["Title"]</h1>

<hr />

<form asp-action="Edit">

    <vc:Summary></vc:Summary>

    <input type="hidden" asp-for="Id" />

    <div class="row">
        <div class="mb-3 col-md-6">

            <label asp-for="Nome"></label>
            <input asp-for="Nome" class="form-control" />
            <span asp-validation-for="Nome" class="text-danger"></span>

            <label asp-for="Documento"></label>
            <input asp-for="Documento" class="form-control" />
            <span asp-validation-for="Documento" class="text-danger"></span>

        </div>

        <div class="mb-3 col-md-6">

            <label asp-for="TipoFornecedor"></label>
            <div>
                <input type="radio" value="1" asp-for="TipoFornecedor" checked="@(Model.TipoFornecedor == 1)" /> Pessoa Física
                <input type="radio" value="2" asp-for="TipoFornecedor" checked="@(Model.TipoFornecedor == 2)" /> Pessoa Jurídica
            </div>
            <div>
                &nbsp;
            </div>
            <div class="form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Ativo" /> @Html.DisplayNameFor(model => model.Ativo)
                </label>
            </div>
        </div>
    </div>


    <div class="form-group">
        <input type="submit" value="Salvar" class="btn btn-success" />
    </div>
</form>

<div id="EnderecoTarget">
    <partial name="_DetalhesEndereco" />
</div>


<h4>Produtos</h4>
<div>
    @*Note que para buscar partial view _ListaProdutos precisamos subir voltar uma pasta, entrar em produtos e 
      e _ListaProdutos, precisamos também informar a model para ser preenchida. Note que na partival view
      _ListaProdutos a model dela é uma coleção @model IEnumerable<DevIO.App.ViewModels.ProdutoViewModel>
      Para funcionar, precisamos passar pra ela a mesma coleção. A nossa classe FornecedorViewModel possui uma
      coleção de Produtos public IEnumerable<ProdutoViewModel> Produtos. Então precisamos passar essa coleção
      como parametro para a Partial View _Listaprodutos ser populada.
    *@
    <partial name="../Produtos/_ListaProdutos" model="@Model.Produtos" />
</div>

<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="myModalContent"></div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
     }


     @*Scrip criado para atender a atualização de endereço com modal. Quando a pagina estiver carregada vamos chamar uma função ajaxmodal que é o
     que vai permitir que façamos a chamada.
     
     Essa função está dentro da biblioteca site.js (wwwroot => js => site.js)
     *@
    <script>
        $(document).ready(function () {
            SetModal();
        });
    </script>

}
